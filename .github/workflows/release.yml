name: Release
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      update_type:
        description: Update type
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions: read-all

jobs:
  initiate:
    name: Initiate
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: write # To push a commit
      pull-requests: write # To open a Pull Request
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm ci
      - uses: tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c # tag=v1.7.0
        id: release-token
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_APP_PRIVATE_KEY }}
      - name: Bump version
        run: npm version ${{ github.event.inputs.update_type }} --no-git-tag-version
      - name: Update CHANGELOG
        run: node script/bump-changelog.js
      - name: Update built files
        run: npm run build
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04 # v4.2.3
        with:
          token: ${{ steps.release-token.outputs.token }}
          title: New ${{ github.event.inputs.update_type }} release for v3
          body: |
            _This Pull Request was created automatically_

            ---

            ### Merge checklist

            - [ ] All continuous integration checks passed.
            - [ ] The version number is updated in `package.json` and `package-lock.json`.
            - [ ] A new release is added to `CHANGELOG.md` with the correct version number and date.
            - [ ] The new version number is in accordance with the [Semantic Versioning] rules.
            - [ ] The `lib/index.cjs` file has been updated.
            - [ ] There are no other changes in the Pull Request.

            If any of the above doesn't hold, or if this is a major release, make adjustments as necessary based on the Release Guidelines (in `RELEASE.md`).

            ### Post-merge checklist

            - [ ] Verify a git tag for the new release is created.[^1]
            - [ ] Verify the `v3` branch is updated.[^1]
            - [ ] Verify a GitHub release is created.[^1]

            [^1]: It may take a few minutes for this to happen.

            [create a github release]: https://github.com/ericcornelissen/svgo-action/blob/a0d6d2031e7cafa1b7c0b71b30453a453058de23/RELEASE.md#creating-a-github-release
            [semantic versioning]: https://semver.org/spec/v2.0.0.html
          labels: release
          branch: release-${{ github.event.inputs.update_type }}
          branch-suffix: random
          commit-message: "chore: version bump"
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    permissions:
      contents: write # To push a tag and create a GitHub Release
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
        with:
          fetch-depth: 0 # To obtain all tags
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm ci
      - name: Check if version is already released
        id: version
        run: |
          VERSION="v$(jq -r '.version' < package.json)"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if [ "$(git tag --list "$VERSION")" ]; then
            echo 'released=true' >> "$GITHUB_OUTPUT"
          else
            echo 'released=false' >> "$GITHUB_OUTPUT"
            {
              echo 'release_notes<<EOF'
              node script/get-release-notes.js
              echo 'EOF'
            } >> "$GITHUB_OUTPUT"
          fi
      - name: Release new version
        if: ${{ steps.version.outputs.released == 'false' }}
        run: |
          # Create tag for new version
          git tag "${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.version }}"

          # Update what commit the v3 branch points to
          git push origin HEAD:v3
      - name: Create GitHub Release
        if: ${{ steps.version.outputs.released == 'false' }}
        uses: ncipollo/release-action@18eadf9c9b0f226f47f164f5373c6a44f0aae169 # v1.11.2
        with:
          body: ${{ steps.version.outputs.release_notes }}
          name: Release ${{ steps.version.outputs.version }}
          tag: ${{ steps.version.outputs.version }}
