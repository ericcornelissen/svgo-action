name: Publish
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    outputs:
      released: ${{ steps.version.outputs.released }}
      release_notes: ${{ steps.version.outputs.release_notes }}
      version: ${{ steps.version.outputs.version }}
      major_version: ${{ steps.major-version.outputs.result }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0 # To obtain all tags
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Check if version is already released
        id: version
        run: |
          VERSION="v$(jq -r '.version' < package.json)"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if [ "$(git tag --list "$VERSION")" ]; then
            echo 'released=true' >> "$GITHUB_OUTPUT"
          else
            echo 'released=false' >> "$GITHUB_OUTPUT"
            {
              echo 'release_notes<<EOF'
              node script/get-release-notes.js
              echo 'EOF'
            } >> "$GITHUB_OUTPUT"
          fi
      - name: Get major version
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        id: major-version
        with:
          result-encoding: string
          script: |
            const version = "${{ steps.version.outputs.version }}"
            const major = version.replace(/\.\d\.\d$/, "")
            return major
  git:
    name: git
    runs-on: ubuntu-22.04
    if: ${{ needs.check.outputs.released == 'false' }}
    needs:
      - check
    permissions:
      contents: write # To push a tag and a branch
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0 # To fetch all major version branches
      - name: Push release tag
        run: |
          git tag '${{ needs.check.outputs.version }}'
          git push origin '${{ needs.check.outputs.version }}'
      - name: Update major version branch
        run: |
          git push origin 'HEAD:${{ needs.check.outputs.major_version }}'
  github:
    name: GitHub
    runs-on: ubuntu-22.04
    if: ${{ needs.check.outputs.released == 'false' }}
    needs:
      - check
      - git
    permissions:
      contents: write # To create a GitHub Release
      id-token: write # To perform keyless signing with cosign
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            fulcio.sigstore.dev:443
            github.com:443
            rekor.sigstore.dev:443
            sigstore-tuf-root.storage.googleapis.com:443
            storage.googleapis.com:443
            tuf-repo-cdn.sigstore.dev:443
            uploads.github.com:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Get cosign version
        id: versions
        run: |
          COSIGN_VERSION="$(grep cosign < .tool-versions | awk '{print $2}')"
          echo "cosign=$COSIGN_VERSION" >> "$GITHUB_OUTPUT"
      - name: Install cosign
        uses: sigstore/cosign-installer@dd6b2e2b610a11fd73dd187a43d57cc1394e35f9 # v3.0.5
        with:
          cosign-release: v${{ steps.versions.outputs.cosign }}
      - name: Sign Action
        run: |
          cosign sign-blob \
            --yes \
            --output-certificate index.cjs.cert \
            --output-signature index.cjs.sign \
            lib/index.cjs
      - name: Verify signature
        run: |
          cosign verify-blob \
            --certificate-identity ericornelissen@gmail.com \
            --certificate-oidc-issuer https://github.com/login/oauth \
            --certificate index.cjs.cert \
            --signature index.cjs.sign \
            lib/index.cjs
      - name: Create GitHub Release
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
        with:
          body: ${{ needs.check.outputs.release_notes }}
          name: Release ${{ needs.check.outputs.version }}
          tag: ${{ needs.check.outputs.version }}
          artifacts: >-
            index.cjs.cert,
            index.cjs.sign
          draft: false
          makeLatest: ${{ needs.check.outputs.major_version == 'v3' }}
          prerelease: false
