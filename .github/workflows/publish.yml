name: Publish
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    outputs:
      released: ${{ steps.version.outputs.released }}
      release_notes: ${{ steps.version.outputs.release_notes }}
      version: ${{ steps.version.outputs.version }}
      major_version: ${{ steps.major-version.outputs.result }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # To obtain all tags
      - name: Install Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Check if version is already released
        id: version
        run: |
          VERSION="v$(jq -r '.version' < package.json)"
          echo "version=${VERSION}" >>"${GITHUB_OUTPUT}"
          if [ "$(git tag --list "${VERSION}")" ]; then
            echo 'released=true' >>"${GITHUB_OUTPUT}"
          else
            echo 'released=false' >>"${GITHUB_OUTPUT}"
            {
              echo 'release_notes<<EOF'
              node script/get-release-notes.js
              echo 'EOF'
            } >>"${GITHUB_OUTPUT}"
          fi
      - name: Get major version
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: major-version
        env:
          VERSION: ${{ steps.version.outputs.version }}
        with:
          result-encoding: string
          script: |
            const version = `${process.env.VERSION}`
            const major = version.replace(/\.\d\.\d$/, "")
            return major
  git:
    name: git
    runs-on: ubuntu-22.04
    if: ${{ needs.check.outputs.released == 'false' }}
    needs:
      - check
    permissions:
      contents: write # To push a tag and a branch
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # To fetch all major version branches
      - name: Push release tag
        env:
          VERSION: ${{ needs.check.outputs.version }}
        run: |
          git tag "${VERSION}"
          git push origin "${VERSION}"
      - name: Update major version branch
        env:
          MAJOR_VERSION: ${{ needs.check.outputs.major_version }}
        run: |
          git push origin "HEAD:${MAJOR_VERSION}"
  github:
    name: GitHub
    runs-on: ubuntu-22.04
    if: ${{ needs.check.outputs.released == 'false' }}
    needs:
      - check
      - git
    permissions:
      contents: write # To create a GitHub Release
      id-token: write # To perform keyless signing with cosign
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            *.githubusercontent.com:443
            api.github.com:443
            fulcio.sigstore.dev:443
            github.com:443
            rekor.sigstore.dev:443
            sigstore-tuf-root.storage.googleapis.com:443
            storage.googleapis.com:443
            tuf-repo-cdn.sigstore.dev:443
            uploads.github.com:443
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Get cosign version
        id: versions
        run: |
          COSIGN_VERSION="$(grep cosign < .tool-versions | awk '{print $2}')"
          echo "cosign=${COSIGN_VERSION}" >>"${GITHUB_OUTPUT}"
      - name: Install cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0
        with:
          cosign-release: v${{ steps.versions.outputs.cosign }}
      - name: Sign Action
        run: |
          cosign sign-blob \
            --yes \
            --output-certificate index.cjs.cert \
            --output-signature index.cjs.sign \
            lib/index.cjs
      - name: Create GitHub Release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1.14.0
        with:
          body: ${{ needs.check.outputs.release_notes }}
          name: Release ${{ needs.check.outputs.version }}
          tag: ${{ needs.check.outputs.version }}
          artifacts: >-
            index.cjs.cert,
            index.cjs.sign
          draft: false
          makeLatest: ${{ needs.check.outputs.major_version == 'v4' }}
          prerelease: false
