name: Check
on:
  pull_request: ~
  push:
    branches:
      - main
      - main-v2
      - v2
      - v3

permissions: read-all

jobs:
  audit:
    name: Audit
    uses: ericcornelissen/svgo-action/.github/workflows/reusable-audit.yml@main
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Build standalone JavaScript file
        run: npm run build
  codeql:
    name: CodeQL
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443
            uploads.github.com:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Initialize CodeQL
        uses: github/codeql-action/init@312e093a1892bd801f026f1090904ee8e460b9b6 # v2.1.34
        with:
          config-file: ./.github/codeql-config.yml
          languages: javascript
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@312e093a1892bd801f026f1090904ee8e460b9b6 # v2.1.34
  licenses:
    name: Licenses
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Check licenses
        run: |
          mkdir _reports
          npm run license-check
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            docker.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install tooling
        uses: asdf-vm/actions/install@707e84f3ee349548310aeabdad0dd3bfcb9b69fa # v1.1.0
      - name: Install dependencies
        run: npm clean-install
      - name: Set setup success flag
        id: setup
        run: echo 'succeeded=true' >> "$GITHUB_OUTPUT"
      - name: Lint CI
        if: ${{ steps.setup.outputs.succeeded }}
        run: npm run lint:ci
      - name: Lint source code
        if: ${{ steps.setup.outputs.succeeded }}
        run: npm run lint
      - name: Lint Dockerfile
        if: ${{ steps.setup.outputs.succeeded }}
        run: npm run lint:docker
      - name: Lint shell scripts
        if: ${{ steps.setup.outputs.succeeded }}
        run: npm run lint:sh
  test:
    name: Test - ${{ matrix.type }}
    runs-on: ubuntu-22.04
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        type:
          - integration
          - unit
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache Jest
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          path: .cache/jest
          key: ${{ runner.os }}-jest-${{ matrix.type }}-${{ hashFiles('package-lock.json') }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-jest-${{ matrix.type }}-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-jest-${{ matrix.type }}-
      - name: Install dependencies
        run: npm clean-install
      - name: Run ${{ matrix.type }} tests
        env:
          CI: true
        run: npm run coverage:${{ matrix.type }}
      - name: Upload code coverage
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # tag=v3.1.1
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./_reports/coverage/${{ matrix.type }}/lcov.info
          flags: ${{ matrix.type }}
  test-e2e:
    name: Test - end-to-end (${{ matrix.test.description }})
    runs-on: ubuntu-22.04
    needs:
      - build
      - test
    strategy:
      fail-fast: false
      matrix:
        test:
          - description: built-in, v2
            svgo-version: 2
            svgo-config: test/end-to-end/svgo.config.cjs
          - description: built-in, v3
            svgo-version: 3
            svgo-config: test/end-to-end/svgo.config.cjs
          - description: project, v1
            svgo-version: project
            svgo-config: test/end-to-end/.svgo.yml
            project-svgo-version: ^1.0.0
          - description: project, v2
            svgo-version: project
            svgo-config: test/end-to-end/svgo.config.cjs
            project-svgo-version: ^2.0.0
          - description: project, v3
            svgo-version: project
            svgo-config: test/end-to-end/svgo.config.cjs
            project-svgo-version: ^3.0.0
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Install package-local SVGO
        if: ${{ matrix.test.svgo-version == 'project' }}
        run: npm install --no-save svgo@${{ matrix.test.project-svgo-version }}
      - name: Build SVGO Action
        run: npm run build
      - name: Get the content of SVGs
        id: original-svgs
        run: |
          {
            echo 'svg-one<<EOF'
            cat test/end-to-end/not-optimized-1.svg
            echo 'EOF'

            echo 'svg-two<<EOF'
            cat test/end-to-end/not-optimized-2.svg
            echo 'EOF'

            echo 'ignored-svg-one<<EOF'
            cat test/end-to-end/ignore/ignored-1.svg
            echo 'EOF'

            echo "optimized-svg-one=$(cat test/end-to-end/optimized-1.svg)"
          } >> "$GITHUB_OUTPUT"
      - name: Run SVGO Action
        uses: ./
        id: svgo
        env:
          SVGO_ACTION_E2E_TEST: true
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          svgo-config: ${{ matrix.test.svgo-config }}
          svgo-version: ${{ matrix.test.svgo-version }}
          ignore: |
            test/end-to-end/ignore/*
      - name: Check the output value
        run: |
          if [ '${{ steps.svgo.outputs.DID_OPTIMIZE }}' != 'true' ]; then
            exit 1
          fi

          if [ '${{ steps.svgo.outputs.SVG_COUNT }}' != '3' ]; then
            exit 2
          fi

          if [ '${{ steps.svgo.outputs.OPTIMIZED_COUNT }}' != '2' ]; then
            exit 3
          fi
      - name: Check the content of newly optimized SVGs
        run: |
          SVG=$(cat test/end-to-end/not-optimized-1.svg)
          if [ '${{ steps.original-svgs.outputs.svg-one }}' = "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.svg-one }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 4
          fi

          SVG=$(cat test/end-to-end/not-optimized-2.svg)
          if [ '${{ steps.original-svgs.outputs.svg-two }}' = "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.svg-two }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 5
          fi
      - name: Check the content of already optimized SVGs
        run: |
          SVG=$(cat test/end-to-end/optimized-1.svg)
          if [ '${{ steps.original-svgs.outputs.optimized-svg-one }}' != "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.optimized-svg-one }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 6
          fi
      - name: Check the content of ignored SVGs
        run: |
          SVG=$(cat test/end-to-end/ignore/ignored-1.svg)
          if [ '${{ steps.original-svgs.outputs.ignored-svg-one }}' != "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.ignored-svg-one }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 7
          fi
  test-mutation:
    name: Test - mutation
    runs-on: ubuntu-22.04
    needs:
      - test
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            dashboard.stryker-mutator.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache Stryker incremental report
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3.0.11
        with:
          path: .cache/stryker/incremental.json
          key: mutation-${{ github.run_number }}
          restore-keys: |
            mutation-
      - name: Install dependencies
        run: npm clean-install
      - name: Run mutation tests
        env:
          CI: true
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_TOKEN }}
        run: npm run test:mutation
  vet:
    name: Vet
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - name: Install Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Vet
        run: npm run vet
