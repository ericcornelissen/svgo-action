name: Check
on:
  pull_request: ~
  push:
    branches:
      - main
      - v3

permissions: read-all

jobs:
  action-types:
    name: Action Types
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Validate Action Types
        uses: krzema12/github-actions-typing@be99fa6195eeeec5aee1e87acca69087de0353ce # v1.0.1
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Build standalone JavaScript file
        run: npm run build
  codeql:
    name: CodeQL
    runs-on: ubuntu-22.04
    permissions:
      security-events: write # To upload CodeQL results
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            actions-results-receiver-production.githubapp.com:443
            api.github.com:443
            ghcr.io:443
            github.com:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            uploads.github.com:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@0225834cc549ee0ca93cb085b92954821a145866 # v2.3.5
        with:
          config-file: ./.github/codeql-config.yml
          languages: javascript
      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@0225834cc549ee0ca93cb085b92954821a145866 # v2.3.5
  licenses:
    name: Licenses
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Check licenses
        run: npm run license-check
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            auth.docker.io:443
            docker.io:443
            fulcio.sigstore.dev:443
            github.com:443
            gitlab.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
            rekor.sigstore.dev:443
            sigstore-tuf-root.storage.googleapis.com:443
            tuf-repo-cdn.sigstore.dev:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install tooling
        uses: asdf-vm/actions/install@6a442392015fbbdd8b48696d41e0051b2698b2e4 # v2.2.0
      - name: Install dependencies
        run: npm clean-install
      - name: Lint CI
        if: ${{ failure() || success() }}
        run: npm run lint:ci
      - name: Lint source code
        if: ${{ failure() || success() }}
        run: npm run lint
      - name: Lint Dockerfile
        if: ${{ failure() || success() }}
        run: npm run lint:docker
      - name: Lint shell scripts
        if: ${{ failure() || success() }}
        run: npm run lint:sh
  test:
    name: Test - ${{ matrix.type }}
    runs-on: ubuntu-22.04
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        type:
          - integration
          - unit
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache Jest
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: .cache/jest
          key: ${{ runner.os }}-jest-${{ matrix.type }}-${{ hashFiles('package-lock.json') }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-jest-${{ matrix.type }}-${{ hashFiles('package-lock.json') }}-
            ${{ runner.os }}-jest-${{ matrix.type }}-
      - name: Install dependencies
        run: npm clean-install
      - name: Run ${{ matrix.type }} tests
        env:
          CI: true
        run: npm run 'coverage:${{ matrix.type }}'
      - name: Upload code coverage
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        if: ${{ always() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./_reports/coverage/${{ matrix.type }}/lcov.info
          flags: ${{ matrix.type }}
  test-e2e:
    name: Test - end-to-end (${{ matrix.test.description }})
    runs-on: ubuntu-22.04
    needs:
      - build
      - test
    strategy:
      fail-fast: false
      matrix:
        test:
          - description: built-in, v2
            svgo-version: 2
            svgo-config: test/end-to-end/svgo.config.cjs
          - description: built-in, v3
            svgo-version: 3
            svgo-config: test/end-to-end/svgo.config.cjs
          - description: project, v1
            svgo-version: project
            svgo-config: test/end-to-end/.svgo.yml
            project-svgo-version: ^1.0.0
          - description: project, v2
            svgo-version: project
            svgo-config: test/end-to-end/svgo.config.cjs
            project-svgo-version: ^2.0.0
          - description: project, v3
            svgo-version: project
            svgo-config: test/end-to-end/svgo.config.cjs
            project-svgo-version: ^3.0.0
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Install package-local SVGO
        if: ${{ matrix.test.svgo-version == 'project' }}
        run: npm install --no-save 'svgo@${{ matrix.test.project-svgo-version }}'
      - name: Build SVGO Action
        run: npm run build
      - name: Get the content of SVGs
        id: original-svgs
        run: |
          {
            echo 'svg-one<<EOF'
            cat test/end-to-end/not-optimized-1.svg
            echo 'EOF'

            echo 'svg-two<<EOF'
            cat test/end-to-end/not-optimized-2.svg
            echo 'EOF'

            echo 'ignored-svg-one<<EOF'
            cat test/end-to-end/ignore/ignored-1.svg
            echo 'EOF'

            echo "optimized-svg-one=$(cat test/end-to-end/optimized-1.svg)"
          } >> "$GITHUB_OUTPUT"
      - name: Run SVGO Action
        uses: ./
        id: svgo
        env:
          SVGO_ACTION_E2E_TEST: true
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          svgo-config: ${{ matrix.test.svgo-config }}
          svgo-version: ${{ matrix.test.svgo-version }}
          ignore: |
            test/end-to-end/ignore/*
      - name: Check the output value
        run: |
          if [ '${{ steps.svgo.outputs.DID_OPTIMIZE }}' != 'true' ]; then
            exit 1
          fi

          if [ '${{ steps.svgo.outputs.SVG_COUNT }}' != '3' ]; then
            exit 2
          fi

          if [ '${{ steps.svgo.outputs.OPTIMIZED_COUNT }}' != '2' ]; then
            exit 3
          fi
      - name: Check the content of newly optimized SVGs
        run: |
          SVG=$(cat test/end-to-end/not-optimized-1.svg)
          if [ '${{ steps.original-svgs.outputs.svg-one }}' = "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.svg-one }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 4
          fi

          SVG=$(cat test/end-to-end/not-optimized-2.svg)
          if [ '${{ steps.original-svgs.outputs.svg-two }}' = "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.svg-two }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 5
          fi
      - name: Check the content of already optimized SVGs
        run: |
          SVG=$(cat test/end-to-end/optimized-1.svg)
          if [ '${{ steps.original-svgs.outputs.optimized-svg-one }}' != "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.optimized-svg-one }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 6
          fi
      - name: Check the content of ignored SVGs
        run: |
          SVG=$(cat test/end-to-end/ignore/ignored-1.svg)
          if [ '${{ steps.original-svgs.outputs.ignored-svg-one }}' != "$SVG" ]; then
            echo '=== BEFORE ==='
            echo '${{ steps.original-svgs.outputs.ignored-svg-one }}'
            echo '=== AFTER ==='
            echo "$SVG"
            exit 7
          fi
  test-mutation:
    name: Test - mutation
    runs-on: ubuntu-22.04
    needs:
      - test
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            dashboard.stryker-mutator.io:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Cache Stryker incremental report
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: .cache/stryker/incremental.json
          key: mutation-${{ github.run_number }}
          restore-keys: |
            mutation-
      - name: Install dependencies
        run: npm clean-install
      - name: Run mutation tests
        env:
          CI: true
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_TOKEN }}
        run: npm run test:mutation
  vet:
    name: Vet
    runs-on: ubuntu-22.04
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Install dependencies
        run: npm clean-install
      - name: Vet dependencies
        if: ${{ failure() || success() }}
        run: npm run vet:deps
      - name: Vet imports
        if: ${{ failure() || success() }}
        run: npm run vet:imports
      - name: Vet types
        if: ${{ failure() || success() }}
        run: npm run vet:types
